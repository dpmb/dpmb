// Datei: ./konzepte/software-in-paketen-organisieren/veroeffentlichungen.txt

// Baustelle: Fertig
// Axel: Fertig

[[veroeffentlichungen]]

=== Veröffentlichungen ===

// Stichworte für den Index
(((Veröffentlichung, Releases)))
(((Veröffentlichung, Varianten)))
Debian GNU/Linux wird in verschiedenen Veröffentlichungen angeboten, die
jeweils als ``Releases'' bezeichnet werden. Eine solche Veröffentlichung
kann wie folgt referenziert werden:

* nach ihrer Versionsnummer, z.B. _Debian 7_ oder _Debian 8_
* nach dem aktuellen Entwicklungsstand der Veröffentlichung (siehe
<<bedeutung-der-verschiedenen-entwicklungsstaende>>), z.B. _stable_,
_testing_ oder _unstable_
* nach ihrem Alias-Namen (siehe <<alias-namen>>), z.B. _Wheezy_ oder
_Jessie_

[[bedeutung-der-verschiedenen-entwicklungsstaende]]
==== Bedeutung der verschiedenen Entwicklungsstände ====

// Stichworte für den Index
(((Veröffentlichung, Entwicklungsstand)))
(((Veröffentlichung, experimental)))
(((Veröffentlichung, LTS)))
(((Veröffentlichung, oldstable)))
(((Veröffentlichung, oldoldstable)))
(((Veröffentlichung, stable)))
(((Veröffentlichung, testing)))
(((Veröffentlichung, unstable)))
Jedes aktuelle Debian-Paket gehört zu mindestens einem der nachfolgend beschriebenen
Entwicklungsstände:

unstable:: 
Hier findet die aktive Entwicklung von Debian statt. Neue Pakete und
Versionen landen fast immer zuerst hier. Dieser Entwicklungzustand kann
inkonsistent sein und beispielsweise unerfüllte Abhängigkeiten
beinhalten. Er ist primär für Entwickler gedacht.

testing:: 
Pakete, die in _unstable_ für eine gewisse Zeit keine schwerwiegenden
Fehler aufweisen und deren Abhängigkeiten bereits ebenfalls in _testing_
erfüllt werden können, wandern automatisch von 'unstable' hierher. Dieser
Entwicklungsstand sollte konsistent sein und alle Paketabhängigkeiten
erfüllbar sein.

stable:: 
Das ist die jeweils aktuelle stabile Veröffentlichung. Dieser
Entwicklungsstand ist für die normale Nutzung von Debian empfohlen. Eine
neue stabile Veröffentlichung wird ca. alle zwei Jahre auf Basis von
_testing_ erstellt. Pakete werden nur aktualisiert, um
sicherheitskritische oder sonstige schwerwiegende Fehler zu
beheben. Dabei werden (mit sehr wenigen Ausnahmen) ausschließlich die
entsprechenden Fehler durch Patches behoben anstatt neuerer Versionen
der Programme auszuliefern.

oldstable:: 
Das ist die jeweils vorherige stabile Veröffentlichung. Bevor eine neue
stabile Veröffentlichung freigegeben wird, erfolgt eine Umbenennung der
aktuellen stabilen Veröffentlichung in _oldstable_. Diese wird von da an
im Normalfall noch für ein Jahr weiter gepflegt und mit
Sicherheitsaktualisierungen versehen.
+
Im Frühjahr 2014 wurden zusätzlich sogenannte _Long Term
Support_-Varianten – kurz _LTS_ – eingeführt, die den Zeitraum der
weiteren Verfügbarkeit und Pflege auf bis zu fünf Jahre verlängern. In
Folge wird die im Jahr 2011 freigegebene und 2013 durch Debian 7
_Wheezy_ abgelöste Veröffentlichung von Debian 6 _Squeeze_ bis 2016 mit
Aktualisierungen versorgt.

oldoldstable:: 
Wenn vorhanden, ist dies die jeweils vorvorherige stabile
Veröffentlichung. Zum ersten Mal trat dieser Entwicklungsstand auf, als im
Frühjahr 2015 Debian 8 _Jessie_ zur stabilen Veröffentlichung erklärt
wurde. Gleichzeitig wurde Debian 6 _Squeeze_ zur neuen Suite
_oldoldstable_ und wird per _Long Term Support_ weiterhin noch
eingeschränkt unterstützt.

experimental:: 
Dies ist der einzige Entwicklungsstand, der keine alleinstehende
Veröffentlichung ist, sondern ein nur ein Zusatz-Repository. Es fungiert als Zusatz
zu _unstable_ und beinhaltet Pakete, bei denen der Paketbetreuer davon
ausgeht, dass sie noch und ggf. sogar grobe Fehler beinhalten.
_experimental_ wird genutzt, um Pakete im größeren Umfeld zu testen,
bevor diese nach _unstable_ hochgeladen werden.

// Stichworte für den Index
(((Veröffentlichung, Entwicklungsstand)))
(((Veröffentlichung, Debian Backports)))
Darüberhinaus existiert der Paketbereich _backports_. Das beinhaltet
Rückportierungen neuerer oder aktualisierter Pakete aus dem
Entwicklungszweig _testing_ nach _stable_, teilweise auch aus
_unstable_. Das ist spannend, aber auch mit gewissen Risiken verbunden.
Im Detail gehen wir darauf unter Debian Backports in
<<debian-backports>> ein.

[[alias-namen]]
==== Alias-Namen ====

// Stichworte für den Index
(((Veröffentlichung, Aliasname)))
(((Veröffentlichung, Toy Story)))
Jede Veröffentlichung von Debian GNU/Linux hat einen Alias-Namen, der
nach einer Figur aus Pixars Filmreihe Toy Story benannt ist. Für die
bisherigen Veröffentlichungen standen die folgenden Figuren aus dem Film
Pate:

* Debian 1.0 wurde nie offiziell veröffentlicht.

* Debian 1.1 _Buzz_ (17. Juni 1996; benannt nach Buzz Lightyear, dem Astronauten)

* Debian 1.2 _Rex_ (12. Dezember 1996; benannt nach dem Plastikdinosaurier)

* Debian 1.3 _Bo_ (5. Juni 1997; benannt nach Bo Peep, der Schäferin)

* Debian 2.0 _Hamm_ (24. Juli 1998; benannt nach dem Sparschwein)

* Debian 2.1 _Slink_ (9. März 1999; benannt nach dem Hund Slinky Dog)

* Debian 2.2 _Potato_ (15. August 2000; benannt nach der Puppe Mr. Potato Head)

* Debian 3.0 _Woody_ (19. Juli 2002; benannt nach dem Cowboy Woody Pride, der Hauptfigur der Filme)

* Debian 3.1 _Sarge_ (6. Juni 2005; benannt nach dem Feldwebel der grünen Plastiksoldaten)

* Debian 4.0 _Etch_ (8. April 2007; benannt nach der Zeichentafel Etch-A-Sketch)

* Debian 5.0 _Lenny_ (Februar 2009; benannt nach dem aufziehbaren Fernglas)

* Debian 6.0 _Squeeze_ (Februar 2011; benannt nach den grünen dreiäugigen Aliens)

* Debian 7 _Wheezy_ (Mai 2013; benannt nach Wheezy the Penguin, dem Gummi-Spielzeugpinguin mit der roten Fliege)

* Debian 8 _Jessie_ (25. April 2015; benannt nach der jodelnden Kuhhirtinnen-Puppe Jessica Jane ``Jessie'' Pride)

* Debian 9 _Stretch_ (noch kein Veröffentlichungstermin zum Zeitpunkt der
Drucklegung festgelegt, voraussichtlich 2017; benannt nach dem lila Kraken)

* Debian 10 _Buster_ (noch kein Veröffentlichungstermin zum Zeitpunkt der
Drucklegung festgelegt, voraussichtlich 2019; benannt nach dem Welpen aus 'Toy Story 2')

Mehr Details zu den einzelnen Veröffentlichungen finden sich in der
Debian-Historie{empty}footnote:[http://www.debian.org/doc/manuals/project-history/ch-releases.de.html].
Die Figuren aus Toy Story und insbesondere deren Charakterzüge sind
ausführlich im Disney Wiki{empty}footnote:[http://disney.wikia.com/wiki/Toy_Story] dokumentiert.

.Beschreibung der Filmserie 'Toy Story' im Disney Wiki
image::konzepte/software-in-paketen-organisieren/toystory.png[id="fig.toystory", width="50%"]

// Stichworte für den Index
(((Veröffentlichung, Nummerierung)))
Auch bei der Bezeichnung der Aktualisierungen zur stabilen
Veröffentlichung ergeben sich über die Jahre hinweg kleine Unterschiede.
Anfangs erfolgte die Kennzeichnung durch Anhängen des Buchstabens `r`
und der Nummer der Aktualisierung, z.B. `4.0r8` für die 8.
Aktualisierung von Debian 4.0 _Etch_. Seit Debian 5.0 _Lenny_ wird
stattdessen ein Punkt verwendet, so z.B. `5.0.3` für die dritte
Aktualisierung.

Seit Debian 4.0 _Etch_ bekamen stabile Veröffentlichungen immer eine
neue Nummer an erster Stelle. Seit Debian 7 _Wheezy_ ist die Null an
zweiter Stelle verschwunden und stattdessen wird die Nummer der
Aktualisierung genutzt, so z.B. `7.3` für die dritte Aktualisierung von
Debian 7 _Wheezy_.

==== Zusammenhang von Alias-Namen und Entwicklungsständen ====

// Stichworte für den Index
(((Veröffentlichung, Alias-Name)))
(((Veröffentlichung, oldoldstable)))
Neben den o.g. Entwicklungsständen haben alle Veröffentlichungen auch
noch Alias-Namen, die eine Veröffentlichung stets unverändert beibehält.
Jede neue Veröffentlichung startet nach einer stabilen Veröffentlichung
als _testing_, wird dann bei der nächsten stabilen Veröffentlichung zu
_stable_, bei der übernächsten zum _oldstable_ und danach zu
_oldoldstable_.

Ist eine Veröffentlichung — sei es als 'oldstable' oder als
'oldoldstable' — am Ende ihrer Unterstützung angelangt, wird sie in das
Debian-Archiv{empty}footnote:[http://archive.debian.org/] übertragen.
Dieses Archiv beinhaltet alle nicht mehr unterstützten
Veröffentlichungen.

// Stichworte für den Index
(((Veröffentlichung, Ausnahmen)))
(((Veröffentlichung, experimental)))
(((Veröffentlichung, unstable)))
Eine weitere Ausnahme bildet die Veröffentlichung zu _unstable_. Sie
besitzt stets den gleichen Alias-Namen _Sid_. In der Filmreihe Toy Story
ist das passenderweise der Name des bösen Nachbarkinds, welches immer
alle Spielzeuge kaputt macht. _Sid_ ist auch gleichzeitig ein Akronym für
_still in development_ – zu deutsch ``noch in Entwicklung'' –, was den
Status der Veröffentlichung der zukünftigen Distribution sehr treffend
umschreibt.

Die Paketklassifikation _experimental_ hat keinen eigenen
Alias-Namen. Das rührt daher, dass es keine eigenständige
Veröffentlichung von Debian GNU/Linux darstellt.

==== Pakete auf Wanderschaft von einem Entwicklungsstand in den nächsten ====

// Stichworte für den Index
(((Veröffentlichung, Wechsel des Entwicklungsstands)))
Sieht man von Uploads nach _experimental_ ab, fängt das Leben einer
neuen Version eines Debianpakets mit dem Hochladen nach _unstable_ an.
Das Paket wird automatisch in _testing_ übernommen, sobald einige
Bedingungen erfüllt sind:

* Die Version des Paketes in _unstable_ führt keine neuen
  veröffentlichungskritischen Fehler in _testing_ ein.

* Alle notwendigen Abhängigkeiten des Pakets sind in _testing_
  verfügbar oder werden gleichzeitig nach _testing_ migriert.

* Es darf keine Abhängigkeiten von Paketen zerstören, die bereits in
  _testing_ enthalten sind und diese damit nicht mehr installierbar
  machen.

* Das Paket hat ein Mindestalter an Tagen erreicht. Dieses
  Mindestalter hängt vom Wert des Felds _urgency_ (engl. für
  Dringlichkeit) im aktuellen Changelog-Eintrag ab und beträgt entweder
  10, 5 oder 2 Tage. Die Dringlichkeit wird dabei vom Paketmaintainer
  entschieden. Bei Korrekturen von sicherheitsrelevanten Fehlern ist es
  durchaus üblich, dass die Dringlichkeit auf ``hoch'' gesetzt wird und
  damit nur 2 Tage beträgt.

* Das Paket muss auf allen Architekturen, auf denen es gebaut wird, in
  der aktuellsten Version verfügbar sein.

* Das Paket muss auf allen Architekturen bereitstehen, auf denen es
  vorher bereits gebaut wurde. Für Ausnahmen muss zuerst das alte
  Paket aus dem Archiv manuell entfernt werden.

Das Debian-Release-Team kann allerdings diese Bedingungen individuell
übersteuern und kürzere oder längere Fristen für den Übergang in die
_testing_-Veröffentlichung setzen.

// Stichworte für den Index
(((Veröffentlichung, Feature Freeze)))
(((Veröffentlichung, Versionswechsel)))
Zu einem bestimmten Zeitpunkt im Entwicklungszyklus einer neuen
stabilen Veröffentlichung friert das Release-Team die
_testing_-Veröffentlichung ein – auch genannt _Freeze_ (engl. für
Einfrieren). Ab diesem Moment wandern keine Pakete mehr automatisch von
_unstable_ nach _testing_ und das Debian-Release-Team muss jeden
einzelnen, weiteren Übergang eines Paketes explizit abnicken. Je länger
der Freeze andauert, desto schärfer werden die Bedingungen, unter denen
das Debian-Release-Team einen Übergang nach _testing_ akzeptiert. Im
Normalfall werden nur noch Paketversionen akzeptiert, die ausschließlich
Fehler korrigieren und keine neuen Features einführen. Daher wird für
diesen Zustand auch der Begriff _Feature Freeze_ verwendet.

Auf diese Weise wird versucht, sämtliche veröffentlichungskritischen
Fehler in der _testing_-Veröffentlichung zu beheben. Sobald es dort
keinen dieser Fehler mehr gibt, geschehen die folgenden Dinge:

* Die bisherige Veröffentlichung _stable_ wird zu _oldstable_. Sie
  behält dabei ihren Alias-Namen bei.

* Eine Kopie des aktuellen Zweigs _testing_ wird zum neuen Zweig
  _stable_. Der Alias-Name zieht mit um.

* _testing_ bekommt einen neuen Alias-Namen.

* Der Freeze wird aufgehoben und die Pakete propagieren wieder
automatisch von _unstable_ nach _testing_.

==== Organisation der Pakete im Paketpool ====

// Stichworte für den Index
(((Veröffentlichung, Organisation im Paketpool)))
Wenn eine Paketversion von _unstable_ nach _testing_ wandert oder aus
_testing_ das neue _stable_ wird, werden allerdings nicht wirklich
Pakete kopiert. Stattdessen werden vielmehr nur die Metadaten des
betreffenden Paketes von einer Paketliste in eine andere umgetragen. Das
Paket selbst liegt immer noch an gleicher Stelle und nur einmal im
sogenannten Paketpool.

So kann es vorkommen, dass ein Paket, welches nur selten aktualisiert
wird, in allen aktuellen Veröffentlichungen in der gleichen Version
vorkommt und dafür auch nur einmal auf jedem Spiegel des
Debian-APT-Archivs liegt. Welches Paket dann aus den verschiedenen
Entwicklungsständen bei einer Installation ausgewählt wird, erfahren Sie
unter Aus welchem Repo kommen die Pakete (siehe
<<aus-welchem-repo-kommen-die-pakete>>) genauer.

// Datei (Ende): ./konzepte/software-in-paketen-organisieren/veroeffentlichungen.txt
