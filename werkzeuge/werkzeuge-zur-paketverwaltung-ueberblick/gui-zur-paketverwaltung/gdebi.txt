// Datei: ./werkzeuge/werkzeuge-zur-paketverwaltung-ueberblick/gui-zur-paketverwaltung/gdebi.txt

// Baustelle: Fertig

[[gui-gdebi]]

==== GDebi ====

// Überblick
Initial nur für Ubuntu entwickelt, verbirgt sich unter dem Namen GDebi
<<gdebi>> ein kleines, seit 2004 von Michael Vogt betreutes Programm.
Auf den ersten Blick wirkt GDebi recht unscheinbar, füllt aber genau die
kleine Lücke zwischen den Kommandos `dpkg -i` und `apt-get install`
(siehe <<dpkg>>, <<apt>> und <<pakete-installieren>>). Die Besonderheit
von GDebi liegt darin, dass es lokal vorliegende `deb`-Pakete
installieren kann, während es deren Abhängigkeiten aus den Repositories
via APT auflöst und daraus die zusätzlich benötigten Pakete bezieht.
Damit eignet es sich besonders gut, um zugesandte, selbst erstellte oder
auch manuell heruntergeladene Pakete zu installieren.

// Komponenten
GDebi besteht aus drei *Komponenten* -- einem Kommandozeilenprogramm
namens `gdebi` (aus dem Paket 'gdebi-core') und zwei graphischen
Bedienoberflächen. Es existiert eine GTK-basierte Variante namens
`gdebi-gtk` (aus dem Paket 'gdebi' -- siehe <<fig.gdebi-gtk>>) und eine
KDE-Variante namens `gdebi-kde` (aus dem gleichnamigen Paket 'gdebi-kde'). 

.`gdebi` mit den Informationen zum Paket 'apt-doc'
image::werkzeuge/werkzeuge-zur-paketverwaltung-ueberblick/gui-zur-paketverwaltung/gdebi-gtk.png[id="fig.gdebi-gtk", width="50%"]

Dabei dient das Kommandozeilenprogramm `gdebi` den beiden graphischen
Werkzeugen als Backend und wird von diesen intern aufgerufen, um die
jeweiligen Paketoperationen auszuführen. Sie können es aber auch alleine
auf der Kommandozeile benutzen, ohne dass eine der beiden graphischen
Komponenten installiert sein muss. Rufen Sie dazu GDebi auf der
*Kommandozeile* mit einem `deb`-Paket als Parameter auf, erhalten Sie
die Paketbeschreibung. Stimmen Sie danach der abschließenden Frage zur
Installation mit kbd:[j] zu, führt `gdebi` ihren Wunsch aus und das
`deb`-Paket landet auf ihrem Linux-System. 

.Anzeige der Paketbeschreibung bei manuellem Aufruf von `gdebi`
----
# gdebi Desktop/odeskteam_3.10.5_debian_7.2_i386.deb 
Reading package lists... Done
Building dependency tree        
Reading state information... Done
Building data structures... Done 
Building data structures... Done 


oDesk Team - complete time-logging and verification system
 Who needs it: All providers are required to run oDesk Team in order to have a
 verified record of their work. oDesk Team is optional for buyers, however a
 lot of our buyers run it to have an online record of their work and be able to
 collaborate better with their remote team.
 .
 Note: This single-install download is the full oDesk Team client application,
 which will only be fully functional if used in conjunction with an oDesk Team
 Online Account with a valid license to access the Service. Review carefully
 our License Agreement before downloading.
Wollen Sie das Software-Paket installieren? [j/N]:
...
#
----

// Graphische Werkzeuge
Die *graphischen Werkzeuge* starten Sie entweder über den Aufruf
`gdebi-gtk` bzw. `gdebi-kde` im Terminal, oder aber durch Doppelklicken
auf eine `deb`-Datei im Dateimanager ihrer Desktop-Umgebung. In
letzterem Fall wird das von Ihnen angeklickte Paket jedoch nicht sofort
installiert. Sie erhalten zunächst ein Fenster mit vielfältigen
Informationen über das ausgewählte Paket (analog zu <<fig.gdebi-gtk>>).
Erst mit einem weiteren Klick auf menu:[Paket installieren] lösen Sie
die Installation tatsächlich aus. Dieses Vorgehen hilft Ihnen dabei,
herum(f)liegende Pakete nicht aus Versehen zu installieren. Somit
vergewissern Sie sich nochmals, aus welcher ggf. auch unverifizierten
Quelle dieses Paket stammt, bevor Sie es auf Ihrem Rechner installieren.

Neben der Installation und Aktualisierung ermöglicht Ihnen GDebi auch
das Begutachten und Löschen von lokal vorliegenden Paketen. Dies können
auch bereits vorher via APT heruntergeladene Pakete sein, die noch im
Paketcache unter `/var/cache/apt/archives/` herumdümpeln (siehe
<<paketcache>>).

Das Begutachten von Paketen gelingt Ihnen über die einzelnen Reiter
menu:[Beschreibung], menu:[Details] und menu:[enthaltene
Dateien]. Neben der Paketbeschreibung zeigt Ihnen GDebi alle sonstigen
Metadaten aus der Control-Datei (siehe <<aufbau-und-format>>) sowie den
tatsächlichen Paketinhalt an, sofern es sich dabei um Textdateien
handelt. Dies umfasst auch die Maintainer-Skripte.

Darüberhinaus zeigt Ihnen GDebi ab Version 0.9{empty}footnote:[Verfügbar
ab Debian 8 'Jessie' und Ubuntu 14.04 LTS 'Trusty Tahr'] auch sämtliche
Warnungen des Programms `lintian` (<<Debian-Paket-lintian>>) an, die von
dem ausgewählten Paket verursacht werden. Dies erlaubt Ihnen sowohl als
Entwickler, als auch als normaler Benutzer, schnell einen groben
Eindruck von der Qualität des Pakets zu bekommen, bevor Sie dieses auf
ihrem Linux-System installieren und benutzen. Wie Sie mit dem
referenzierten Programm `lintian` im Detail umgehen, lesen Sie unter
Lintian in <<bugreports-lintian>>.

.`gdebi-gtk` mit den Informationen zum Paket 'zsh'
image::werkzeuge/werkzeuge-zur-paketverwaltung-ueberblick/gui-zur-paketverwaltung/gdebi-new.png[id="fig.gdebi-new", width="50%"]

Ergibt sich bei der Veränderung des Paketbestands die Notwendigkeit,
zusätzliche Paketabhängigkeiten aufzulösen, springt GDebi in die Bresche
und klärt diese Situation automatisch mit Hilfe von APT
(<<Vogt-gdebi>>). Fehlende Pakete werden von den vorab konfigurierten
Paketmirrors (siehe <<etc-apt-sources.list-verstehen>>) nachgezogen.
Diese Eigenschaft hebt GDebi deutlich von `dpkg` ab, das nur meckern
kann, falls es auf nicht-erfüllte Abhängigkeiten stößt.

Einziger Wermutstropfen bei GDebi ist, dass sowohl die beiden graphischen
Tools, als auch `gdebi` bislang pro Aufruf nur ein einziges `deb`-Paket
akzeptieren. APT ab Version 1.1 kann allerdings ebenfalls mit lokalen
Paketen umgehen und dabei deren Abhängigkeiten über APT-Repositories
auflösen -- und das auch mit mehr als einem Paket auf einmal. Damit
bietet es sich zukünftig als veritable Alternative zu `gdebi` an und
soll dieses auch langfristig ersetzen{empty}footnote:[Letzteres ist auch
kein Wunder, da sowohl `gdebi` als auch diese Funktionalität von APT vom
gleichen Autor stammen.].

// Datei (Ende): ./werkzeuge/werkzeuge-zur-paketverwaltung-ueberblick/gui-zur-paketverwaltung/gdebi.txt
