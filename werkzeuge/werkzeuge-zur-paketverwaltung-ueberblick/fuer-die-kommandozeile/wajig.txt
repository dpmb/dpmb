// Datei: ./werkzeuge/werkzeuge-zur-paketverwaltung-ueberblick/fuer-die-kommandozeile/wajig.txt

// Baustelle: Fertig

[[wajig2]]

==== `wajig` ====

Das in der Programmiersprache Python geschriebene Programm 'wajig'
<<Debian-Paket-wajig>> ist vorrangig ein Wrapper um `dpkg` (<<dpkg>>)
und APT (<<apt>>). Es zählt zur gleichen Kategorie wie die `aptsh`
(siehe <<aptsh>>), beinhaltet aber auch Elemente von `cupt` (<<Cupt>>)
und `aptitude` (<<aptitude>>) auf der Kommandozeile. Bis einschließlich
Debian 6 'Squeeze' bestand zudem eine graphische Variante namens 'gjig',
die mittlerweile obsolet ist.

`wajig` zielt darauf ab, alle im Alltag erforderlichen Aktionen zur
Paketverwaltung in 'einem' Werkzeug für die Kommandozeile
zusammenzufassen. Daher haben sich die 'wajig'-Entwickler das Ziel
gesetzt, die APT-Bibliotheken (siehe <<apt-und-bibliotheken>>)
vollständig auszureizen und nach Möglichkeit auch alle Optionen, die
`dpkg` und APT bieten, im Programm zu integrieren. Gleichzeitig stehen
auch Funktionen bereit, die von den separaten Werkzeugen wie bspw.
`apt-cdrom` (<<physische-installationsmedien-mit-apt-cdrom-einbinden>>)
oder `alien` (siehe <<fremdformate-mit-alien-hinzufuegen>>) entlehnt
wurden.

Sie bedienen `wajig` ausschließlich über die Tastatur. Möglich sind zwei
Modi -- mit dem gewünschten Unterkommando beim Aufruf, oder ohne. Bei
ersterem erfolgt die Ausgabe direkt im Terminal, bei letzterem öffnet
sich dann zunächst die `wajig`-Shell und wartet auf Ihre Eingabe. In
dieser können Sie dann alle Unterkommandos zur Paketverwaltung benutzen.
Dazu zählen bspw. `install` zur Paketinstallation, `detail` zur
Darstellung der Paketinformationen, `listfiles` zu Auflistung des
Paketinhalts und `remove` zum Entfernen eines Pakets. Mittels
`find-file` erstöbern Sie eine gewünschte Datei in den bereits
installierten Paketen, wohingegen Ihnen `list-orphans` die Paketwaisen
(siehe <<umgang-mit-waisen>>) anzeigt. 

Als Besonderheit ist einerseits die Anbindung an 'apt-get.org'
<<apt-get.org>> zu nennen, um den Paketmirror dynamisch auszuwählen
(siehe <<generischen-mirror-verwenden>>). Ebenso ist die Umwandlung und
Installation von `.rpm`-Paketen mittels `rpm2deb` und `rpminstall` sowie
die ausführliche, integrierte Hilfe hervorzuheben.

.Suche nach der Datei `sources.list` mit Hilfe von `wajig`
----
$ wajig find-file sources.list
apt: /usr/share/man/es/man5/sources.list.5.gz
apt: /usr/share/man/ja/man5/sources.list.5.gz
apt: /usr/share/man/pt/man5/sources.list.5.gz
debtags: /etc/debtags/sources.list
apt: /usr/share/man/fr/man5/sources.list.5.gz
apt: /usr/share/doc/apt/examples/sources.list
debtags: /etc/debtags/sources.list.d
apt: /usr/share/man/de/man5/sources.list.5.gz
debtags: /etc/debtags/sources.list.d/source-example
apt: /usr/share/man/pl/man5/sources.list.5.gz
apt: /etc/apt/sources.list.d
apt: /usr/share/man/man5/sources.list.5.gz
$
----

.`wajig` mit der Ausgabe des Kommandos `listfiles`
image::werkzeuge/werkzeuge-zur-paketverwaltung-ueberblick/fuer-die-kommandozeile/wajig-listfiles.png[id="fig.wajig-listfiles", width="50%"]

Weitere Informationen zum Programm finden Sie auf der Webseite des
Projekts <<wajig-Webseite>>. Um die Feinheiten der Kommandos zwischen
`dpkg`, APT und `wajig` besser vergleichen zu können, hilft ein Blick
in das Wiki von xtronics <<xtronics-Wiki>>.
// Datei (Ende): ./werkzeuge/werkzeuge-zur-paketverwaltung-ueberblick/fuer-die-kommandozeile/wajig.txt
