// Datei: ./praxis/checkinstall.txt

// Baustelle: Rohtext

[[pakete-bauen-mit-checkinstall]]
== Pakete bauen mit `checkinstall` ==

Das Projekt `checkinstall` <<checkinstall>> hat sich zum Ziel gesetzt,
die direkte Erstellung von Binärpaketen aus dem dazugehörigen, aktuellen
Quellcode zu ermöglichen, die zu ihrer Installation passen. Vereinfacht
gesagt, erstellt es ein Paket direkt aus dem Quellcode und übergeht den
Paketmanager dabei aber nicht. Es beobachtet den Erstellprozess und
bindet alle Dateien in das neue Paket ein, die bei der Übersetzung
entstehen. Daher gibt es auch die Umschreibung
``Installations-Verfolger''.

// Stichworte für den Index
indexterm:[checkinstall]
indexterm:[Debianpaket, checkinstall]
indexterm:[dpkg, -i]
indexterm:[Paketflags, hold]

Das Projekt steht unter der GPL2 und ist über das gleichnamige Paket
verfügbar <<Debian-Paket-checkinstall>>. Daraus erstellen Sie sowohl
Slackware-`tgz`- als auch `rpm`- und `deb`-Pakete.

Dazu bezieht das Werkzeug `checkinstall` zunächst die benötigten Quellen
zum Paket. Als Quelle kommen alle Softwarearchive in Frage, so z.B.
neben den regulären Debian-Paketquellen auch SourceForge, Freecode und
GitHub. Gleiches gilt für das direkte Auschecken aus dem Versionskontrollsystem
des Projektes.

Aus dem `tar.gz`-Archiv baut `checkinstall` mit den Kommandos `make` und
`checkinstall` ein passendes `deb`-Paket, welches dann nachfolgend über
die Paketverwaltung mittels `dpkg` eingespielt wird. Zusätzlich erhält
das Paket die Markierung 'hold' (siehe dazu <<paketflags>>).

* Vorteile:
** vereinfachte Nutzung von Entwicklerversionen
** damit kann ein erstelltes Paket auch wieder restefrei vom System heruntergekratzt werden
** installiert automatisch die zusätzlichen, bisher noch nicht installierten Header-Files nach
** Paket passt zu den anderen Softwarekomponenten
** Paketverwaltung hat eine Information darüber, dass das Paket als solches installiert wurde

* Nachteile:
** Paket unterläuft die Qualitätskontrolle von Debian -- die Kontrolle
findet nicht statt
** Prüfung der Paketabhängigkeiten findet nur bedingt statt, d.h.
Ergebnis ist nicht unbedingt portabel
** Das Skript funktioniert nicht bei Programmen, die statisch gegen die
Libc linken, oder bei solchen, bei denen das SUID/GUID-Bit gesetzt ist
(Quelle: <<Drilling-Checkinstall-LinuxUser>>)
** Probleme mit `preinstall`- und `postinstall`-Skripten (Quelle:
<<Schnober-Checkinstall-LinuxUser>>)

* Empfehlung: 
** Nutzung nur für lokale Rechner und Einzelsysteme
(``Testinstallationen''), kein Alltagsbetrieb
** Verwendung in Kombination mit 'auto-apt' (siehe Fehlende Pakete bei Bedarf hinzufügen unter <<fehlende-pakete-bei-bedarf-hinzufuegen>>)

// Datei (Ende): ./praxis/checkinstall.txt
